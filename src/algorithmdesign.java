/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author launa
 */



public class algorithmdesign extends javax.swing.JFrame {

    /**
     * Creates new form algorithmdesign
     */
    public algorithmdesign() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        factoriallbl = new javax.swing.JLabel();
        primelbl = new javax.swing.JLabel();
        fibonaccilbl = new javax.swing.JLabel();
        factorialtxt = new javax.swing.JTextField();
        primetxt = new javax.swing.JTextField();
        fibonaccitxt = new javax.swing.JTextField();
        ttllbl = new javax.swing.JLabel();
        factorialbtn = new javax.swing.JButton();
        primebtn = new javax.swing.JButton();
        fibonaccibtn = new javax.swing.JButton();
        fibonacciinputlbl = new javax.swing.JLabel();
        factorialinputlbl = new javax.swing.JLabel();
        primeinputlbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        factoriallbl.setText("Enter a number and click the button to find its factorial : ");

        primelbl.setText("Enter a number and click the button to determine whether or not it is prime : ");

        fibonaccilbl.setText("Enter a number and click the button to see the corresponding Fibonacci number : ");

        ttllbl.setText("Numbers");

        factorialbtn.setText("Factorial");
        factorialbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factorialbtnActionPerformed(evt);
            }
        });

        primebtn.setText("Prime");
        primebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primebtnActionPerformed(evt);
            }
        });

        fibonaccibtn.setText("Fibonacci");
        fibonaccibtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fibonaccibtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(factoriallbl)
                    .addComponent(primelbl)
                    .addComponent(fibonaccilbl)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(factorialtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(factorialbtn)
                        .addGap(30, 30, 30)
                        .addComponent(factorialinputlbl))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(primetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(primebtn)
                        .addGap(70, 70, 70)
                        .addComponent(primeinputlbl))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fibonaccitxt, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(fibonaccibtn)
                        .addGap(76, 76, 76)
                        .addComponent(fibonacciinputlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ttllbl))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(ttllbl)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(factoriallbl)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(factorialtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(factorialinputlbl)))
                    .addComponent(factorialbtn))
                .addGap(25, 25, 25)
                .addComponent(primelbl)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(primetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(primebtn)
                    .addComponent(primeinputlbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fibonaccilbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fibonaccitxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fibonaccibtn)
                    .addComponent(fibonacciinputlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    static int Fibonacci (int n)
    {
     int f[] = new int [n+2];
     int i;
     
     f[0] = 0;
     f[1] = 1;
     for (i = 2; i <= n; i++)
     {
         f[i] = f[i-1] + f[i-2];
     }
     return f[n];      
    }
    
    private void fibonaccibtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fibonaccibtnActionPerformed
    
     int input = Integer.parseInt(fibonaccitxt.getText());
     Fibonacci (input);
     fibonacciinputlbl.setText(String.valueOf(Fibonacci(input)));
        
        
    }//GEN-LAST:event_fibonaccibtnActionPerformed

    
    static int Factorial (int n)
    {   
     int i;
     for (i = n-1; i >=1; i--)
     {
        n = n *i;   
     }
     return n;
    
    }
    private void factorialbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factorialbtnActionPerformed
        int inputf = Integer.parseInt(factorialtxt.getText());
        Factorial (inputf);
        factorialinputlbl.setText(String.valueOf(Factorial(inputf)));
    }//GEN-LAST:event_factorialbtnActionPerformed
   
       
    private void primebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primebtnActionPerformed
     int numprime = Integer.parseInt(primetxt.getText());
     
     int i;
     boolean isPrime = true; 
     
     for (i = 2; i <=numprime / 2; i= i+1 )
     {
       int temp = numprime % i;
       if (temp ==0)
       {
           isPrime = false;
           break;
       }
      
     }
      if (isPrime)
       {
           primeinputlbl.setText(String.valueOf(numprime+ " is a prime number"));
       }
      else
      {
        primeinputlbl.setText(String.valueOf(numprime+ " is not a prime number"));
      }
     
     
     
     
    }//GEN-LAST:event_primebtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(algorithmdesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(algorithmdesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(algorithmdesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(algorithmdesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new algorithmdesign().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton factorialbtn;
    private javax.swing.JLabel factorialinputlbl;
    private javax.swing.JLabel factoriallbl;
    private javax.swing.JTextField factorialtxt;
    private javax.swing.JButton fibonaccibtn;
    private javax.swing.JLabel fibonacciinputlbl;
    private javax.swing.JLabel fibonaccilbl;
    private javax.swing.JTextField fibonaccitxt;
    private javax.swing.JButton primebtn;
    private javax.swing.JLabel primeinputlbl;
    private javax.swing.JLabel primelbl;
    private javax.swing.JTextField primetxt;
    private javax.swing.JLabel ttllbl;
    // End of variables declaration//GEN-END:variables
}
